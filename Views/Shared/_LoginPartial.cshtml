@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentScheduling.Models.ApplicationUser> signInManager
@if (signInManager.IsSignedIn(User))
{
<form method="post" id="logoutForm" asp-action="Logoff" asp-controller="Account">
    <ul class="nav navbar-nav">
        <li class="text-white nav-link">Hello, @User.Identity.Name!</li>
        <li class="text-white nav-link"><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
</form>
}
else
{
<ul class="nav navbar-nav">
    @*<li>@Html.ActionLink("Sign Up", "Register", "Account", routeValues:null, htmlAttributes: new { id="registerLink"})</li>
        <li>@Html.ActionLink("Sign Ip", "Login", "Account", routeValues:null, htmlAttributes: new { id="loginLink"})</li>*@
    <li class="nav-item">
        <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="loginLink" asp-controller="Account" asp-action="Login">Sign In</a>
    </li>
</ul>
}